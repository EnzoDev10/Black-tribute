* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

:root {
	--overlay-color: hsl(180 39% 7% / 0.8);
}

html,
body,
#root {
	width: 100%;
	height: 100%;
}

.container {
	display: flex;
	height: 100%;
	width: 100%;
}

.overlay {
	border-image: linear-gradient(var(--overlay-color), var(--overlay-color)) fill
		1;
}

img {
	display: block;
	max-width: 100%;
}

.logo {
	margin-top: 40px;
}

h1 {
	color: white;
}

.left-side {
	width: 20%;
	max-width: 150px;
}

.lines-container {
	display: flex;
	height: 100%;
	position: relative;
	width: 20%;
	min-width: 150px;
}

.line {
	background-image: url('./assets/images/line.svg');
	background-color: var(--overlay-color);
	background-repeat: repeat-y;
	background-size: cover;
	background-position: center top;
	height: 100vh;
	width: 40px;
	position: absolute;
	top: 0;
	right: 0;
	animation: LinesMovement 25s linear infinite;
}

.line.reverse {
	transform: rotate(-180deg);
	left: 0;
	animation: LinesMovement 25s linear infinite;
}

main {
	flex-grow: 3;
	padding-left: 50px;
}

.btns-container {
	display: flex;
	flex-direction: column;
	margin-top: 15px;
	position: relative;
	padding: 20px;
}

.btns-container::before,
.btns-container:after {
	content: '';
	background-color: #ccc;
	position: absolute;
}
.btns-container::before {
	animation: toRightAndBottom 3s ease-in-out forwards;
	bottom: 100%;
	height: 2px;
	left: 0;
	width: 20px;
	top: 0;
	bottom: 100%;
}
.btns-container::after {
	animation: toBottomAndRight 3s ease-in-out forwards;
	bottom: 90%;
	top: 0;
	height: 20px;
	width: 2px;
}

video {
	object-fit: cover;
	width: 100vw;
	height: 100vh;
	position: fixed;
	top: 0;
	left: 0;
	z-index: -1;
}

@keyframes LinesMovement {
	from {
		background-position: center 0;
	}
	to {
		background-position: center calc(100% - 100vh);
	}
}

@keyframes toBottomAndRight {
	0% {
		left: 0;
	}

	50% {
		top: 100%;
		left: 0;
	}

	100% {
		top: 100%;
		left: 50%;
	}
}
@keyframes toRightAndBottom {
	0% {
		left: 0;
	}

	/* With calc both bars always have the same apperance at the final position despite viewport size  */
	50% {
		left: calc(50% - 18px);
		top: 0;
	}

	100% {
		top: 107%;
		left: calc(50% - 18px);
	}
}
